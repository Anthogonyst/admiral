% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/derive_var_ablfl.R
\name{derive_var_ablfl}
\alias{derive_var_ablfl}
\title{Derive Analysis Baseline Flag}
\usage{
derive_var_ablfl(dataset, by_vars, order, mode = "last", flag_filter,
  check_type = "warning")
}
\arguments{
\item{dataset}{Input dataset

The variables specified by the \code{by_vars} parameter are expected.}

\item{by_vars}{Grouping variables

Permitted Values: list of variables}

\item{order}{Sort order

The first or last observation is determined with respect to the specified
order.

Permitted Values: list of variables or functions of variables}

\item{mode}{Flag mode

Determines of the first or last observation is flagged.

Default: \code{"last"}

Permitted Values: \code{"first"}, \code{"last"}}

\item{flag_filter}{Filter for flag data

Only observations fulfilling the specified condition are taken into account
for flagging. If the parameter is not specified, all observations are
considered.

Permitted Values: a condition}

\item{check_type}{Check uniqueness?

If \code{"warning"} or \code{"error"} is specified, the specified message is issued
if the observations of the input dataset are not unique with respect to the
by variables and the order.

Default: \code{"warning"}

Permitted Values: \code{"none"}, \code{"warning"}, \code{"error"}}
}
\value{
The input dataset with the new flag variable added
}
\description{
Adds the analysis baseline flag (\code{ABLFL}) to the dataset.
}
\details{
For each group (with respect to the variables specified for the
\code{by_vars} parameter) the first or last observation (with respect to the
order specified for the \code{order} parameter and the flag mode) will be flagged
as \code{ABLFL} = Y in the output dataset.
}
\examples{
input <- tibble::tribble(
~STUDYID, ~USUBJID, ~PARAMCD,  ~AVISIT,    ~ADT,                 ~AVAL, ~DTYPE,
"TEST01", "PAT01",  "PARAM01", "BASELINE", as.Date("2021-04-27"), 15.0, NA,
"TEST01", "PAT01",  "PARAM01", "BASELINE", as.Date("2021-04-25"), 14.0, NA,
"TEST01", "PAT01",  "PARAM01", "BASELINE", as.Date("2021-04-23"), 15.0, "AVERAGE",
"TEST01", "PAT01",  "PARAM01", "WEEK 1",   as.Date("2021-04-27"), 10.0, "AVERAGE",
"TEST01", "PAT01",  "PARAM01", "WEEK 2",   as.Date("2021-04-30"), 12.0, NA,

"TEST01", "PAT02",  "PARAM01", "SCREENING",as.Date("2021-04-27"), 15.0, "AVERAGE",
"TEST01", "PAT02",  "PARAM01", "BASELINE", as.Date("2021-04-25"), 14.0, "AVERAGE",
"TEST01", "PAT02",  "PARAM01", "BASELINE", as.Date("2021-04-23"), 15.0, "AVERAGE",
"TEST01", "PAT02",  "PARAM01", "WEEK 1",   as.Date("2021-04-27"), 10.0, "AVERAGE",
"TEST01", "PAT02",  "PARAM01", "WEEK 2",   as.Date("2021-04-30"), 12.0, "AVERAGE",

"TEST01", "PAT01",  "PARAM02", "SCREENING",as.Date("2021-04-27"), 15.0, "AVERAGE",
"TEST01", "PAT01",  "PARAM02", "SCREENING",as.Date("2021-04-25"), 14.0, "AVERAGE",
"TEST01", "PAT01",  "PARAM02", "SCREENING",as.Date("2021-04-23"), 15.0, NA,
"TEST01", "PAT01",  "PARAM02", "BASELINE", as.Date("2021-04-27"), 10.0, "AVERAGE",
"TEST01", "PAT01",  "PARAM02", "WEEK 2",   as.Date("2021-04-30"), 12.0, NA,

"TEST01", "PAT02",  "PARAM02", "SCREENING",as.Date("2021-04-27"), 15.0, NA,
"TEST01", "PAT02",  "PARAM02", "BASELINE", as.Date("2021-04-25"), 14.0, NA,
"TEST01", "PAT02",  "PARAM02", "WEEK 1",   as.Date("2021-04-23"), 15.0, NA,
"TEST01", "PAT02",  "PARAM02", "WEEK 1",   as.Date("2021-04-27"), 10.0, NA,
"TEST01", "PAT02",  "PARAM02", "BASELINE", as.Date("2021-04-30"), 12.0, NA
)

Last observation
derive_var_ablfl(input,
                 by_vars = exprs(USUBJID, PARAMCD),
                 order = exprs(ADT),
                 flag_filter = expr(AVISIT == "BASELINE"))

Worst observation - Direction = High
derive_var_ablfl(input,
                 by_vars = exprs(USUBJID, PARAMCD),
                 order = exprs(AVAL, ADT),
                 flag_filter = expr(AVISIT == "BASELINE"))

Worst observation - Direction = Lo
derive_var_ablfl(input,
                 by_vars = exprs(USUBJID, PARAMCD),
                 order = exprs(desc(AVAL), ADT),
                 flag_filter = expr(AVISIT == "BASELINE"))

Average observation
derive_var_ablfl(input,
                 by_vars = exprs(USUBJID, PARAMCD),
                 order = exprs(ADT, desc(AVAL)),
                 flag_filter = expr(AVISIT == "BASELINE" &
                   DTYPE == "AVERAGE" & is.na(DTYPE) == FALSE))

data("vs")
}
\author{
Alice Ehmann
}
\keyword{adam}
\keyword{derivation}
