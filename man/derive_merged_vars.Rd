% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/derive_merged_vars.R
\name{derive_merged_vars}
\alias{derive_merged_vars}
\title{Merge variables from a second dataset}
\usage{
derive_merged_vars(dataset, dataset_add, filter_add, new_vars,
  by_vars = exprs(USUBJID), filter_first_order)
}
\arguments{
\item{dataset}{Input dataset

The variables specified by the \code{by_vars} parameter are expected.}

\item{dataset_add}{Dataset to add

The variables specified by the \code{by_vars}, the \code{filter_add}, and the
\code{filter_first_order} parameter are expected.}

\item{filter_add}{Fiter condition for dataset to add

Only observations of the add dataset which fulfill the specified condition
are used for merging.

Permitted Values: logical expression}

\item{new_vars}{Variable to add

The specified variables are created in the add dataset and then merge to
the input dataset.

Permitted Values: list of name-value pairs}

\item{by_vars}{Grouping variables

Default: \code{exprs(USUBJID)}
Permitted Values: list of variables}

\item{filter_first_order}{Sort order

If the parameter is specified, the add dataset is ordered by the specified
order and only the first observation in each by group is used for merging.

Permitted Values: list of variables or functions of variables}
}
\value{
The input dataset with variables from the add dataset
}
\description{
Merges variables from a second dataset. The observations to merge can be
selected by a condition and/or by selecting the first observation in each by
group.
}
\details{
For each group (with respect to the variables specified for the
\code{by_vars} parameter) the first observation (with respect to the order
specified for the \code{order} parameter) is included in the output dataset.
}
\examples{
data("ex")
data("dm")

# adding first treatment start date for each patient
derive_merged_vars(dm,
                   dataset_add = ex,
                   filter_add = rlang::exprs(EXDOSE > 0 | str_detect(EXTRT, 'PLACEBO')),
                   new_vars = rlang::exprs(TRTSDT := ymd(EXSTDTC)),
                   filter_first_order = rlang::exprs(EXSTDTC, EXSEQ))

}
\seealso{
Other {general functions}: \code{\link{filter_first}}
}
\author{
Stefan Bundfuss
}
\concept{{general functions}}
