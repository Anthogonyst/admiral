% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/derive_date_vars.R
\name{derive_vars_dt}
\alias{derive_vars_dt}
\title{Derive/Impute a Date from a Date Character Vector}
\usage{
derive_vars_dt(
  dataset,
  new_vars_prefix,
  dtc,
  date_imputation = NULL,
  flag_imputation = "auto",
  min_dates = NULL,
  max_dates = NULL,
  preserve = FALSE
)
}
\arguments{
\item{dataset}{Input dataset.

The date character vector (\code{dtc}) must be present.}

\item{new_vars_prefix}{Prefix used for the output variable(s).

A character scalar is expected. For the date variable "DT" is appended to
the specified prefix and for the date imputation flag "DTF". I.e., for
\code{new_vars_prefix = "AST"} the variables \code{ASTDT} and \code{ASTDTF} are created.}

\item{flag_imputation}{Whether the date imputation flag must also be derived.

If \code{"auto"} is specified, the date imputation flag is derived if the
\code{date_imputation} parameter is not null.

\emph{Default}: \code{"auto"}

\emph{Permitted Values}: \code{"auto"}, \code{"date"} or \code{"none"}}
}
\value{
The input dataset with the date \code{'--DT'} (and the date imputation flag \code{'--DTF'}
if requested) added.
}
\description{
Derive a date (\code{'--DT'}) from a date character vector (\verb{'--DTC}').
The date can be imputed (see \code{date_imputation} parameter)
and the date imputation flag ('\verb{--DTF'}) can be added.
}
\details{
The presence of a \code{'--DTF'} variable is checked and if it already exists in the input dataset,
a warning is issued and \code{'--DTF'} will be overwritten.
}
\examples{
library(lubridate)

mhdt <- tibble::tribble(
  ~MHSTDTC,
  "2019-07-18T15:25:40",
  "2019-07-18T15:25",
  "2019-07-18",
  "2019-02",
  "2019",
  "2019---07",
  ""
)

# Create ASTDT and ASTDTF
# no imputation for partial date
derive_vars_dt(
  mhdt,
  new_vars_prefix = "AST",
  dtc = MHSTDTC
)

# Create ASTDT and ASTDTF
# Impute partial dates to first day/month
derive_vars_dt(
  mhdt,
  new_vars_prefix = "AST",
  dtc = MHSTDTC,
  date_imputation = "first"
)

# Impute partial dates to 6th of April
derive_vars_dt(
  mhdt,
  new_vars_prefix = "AST",
  dtc = MHSTDTC,
  date_imputation = "04-06"
)

# Create AENDT and AENDTF
# Impute partial dates to last day/month
derive_vars_dt(
  mhdt,
  new_vars_prefix = "AEN",
  dtc = MHSTDTC,
  date_imputation = "last"
)

# Create BIRTHDT
# Impute partial dates to 15th of June. No DTF
derive_vars_dt(
  mhdt,
  new_vars_prefix = "BIRTH",
  dtc = MHSTDTC,
  date_imputation = "MID",
  flag_imputation = "none"
)

# Impute AE start date to the first date and ensure that the imputed date
# is not before the treatment start date
adae <- tibble::tribble(
  ~AESTDTC, ~TRTSDTM,
  "2020-12", ymd_hms("2020-12-06T12:12:12"),
  "2020-11", ymd_hms("2020-12-06T12:12:12")
)

derive_vars_dt(
  adae,
  dtc = AESTDTC,
  new_vars_prefix = "AST",
  date_imputation = "first",
  min_dates = vars(TRTSDTM)
)

# A user imputing dates as middle month/day, i.e. date_imputation = "MID" can
# use preserve argument to "preserve" partial dates.  For example, "2019---07",
# will be displayed as "2019-06-07" rather than 2019-06-15 with preserve = TRUE

derive_vars_dt(
  mhdt,
  new_vars_prefix = "AST",
  dtc = MHSTDTC,
  date_imputation = "MID",
  preserve = TRUE
)
}
\author{
Samia Kabi
}
\keyword{adam}
\keyword{derivation}
\keyword{timing}
