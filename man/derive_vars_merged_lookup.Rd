% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/derive_merged.R
\name{derive_vars_merged_lookup}
\alias{derive_vars_merged_lookup}
\title{Merge Lookup Table with Source Dataset}
\usage{
derive_vars_merged_lookup(
  dataset,
  dataset_add,
  by_vars,
  new_vars = NULL,
  print_not_mapped = TRUE
)
}
\arguments{
\item{dataset}{Input dataset

The variables specified by the \code{by_vars} parameter are expected.}

\item{dataset_add}{Lookup table

The variables specified by the \code{by_vars} parameter are expected.}

\item{by_vars}{Grouping variables

The input dataset and the selected observations from the additional dataset
are merged by the specified by variables. The by variables must be a unique
key of the selected observations.

\emph{Permitted Values}: list of variables created by \code{vars()}}

\item{new_vars}{Variables to add

The specified variables from the additional dataset are added to the output
dataset. Variables can be renamed by naming the element, i.e., \verb{new_vars = vars(<new name> = <old name>)}.

For example \code{new_vars = vars(var1, var2)} adds variables \code{var1} and \code{var2}
from \code{dataset_add} to the input dataset.

And \code{new_vars = vars(var1, new_var2 = old_var2)} takes \code{var1} and
\code{old_var2} from \code{dataset_add} and adds them to the input dataset renaming
\code{old_var2} to \code{new_var2}.

If the parameter is not specified or set to \code{NULL}, all variables from the
additional dataset (\code{dataset_add}) are added.

\emph{Default}: \code{NULL}

\emph{Permitted Values}: list of variables created by \code{vars()}}

\item{print_not_mapped}{Print a list of unique \code{by_vars} values that do not
have corresponding records from the lookup table?

\emph{Default}: TRUE

\emph{Permitted Values}: TRUE, FALSE}
}
\value{
The output dataset contains all observations and variables of the
input dataset, and add the variables specified in \verb{new_vars from the lookup table specified in }dataset_add\verb{. Optionally prints a list of unique }by_vars\verb{values that do not have corresponding records from the lookup table (by specifying}print_not_mapped = TRUE`).
}
\description{
Merge user-defined lookup table with the input dataset. Optionally print a
list of records from the input dataset that do not have corresponding
mapping from the lookup table.
}
\examples{
library(admiral.test)
library(dplyr, warn.conflicts = FALSE)
data("admiral_vs")
param_lookup <- tibble::tribble(
  ~VSTESTCD, ~VSTEST, ~PARAMCD, ~PARAM,
  "SYSBP", "Systolic Blood Pressure", "SYSBP", "Systolic Blood Pressure (mmHg)",
  "WEIGHT", "Weight", "WEIGHT", "Weight (kg)",
  "HEIGHT", "Height", "HEIGHT", "Height (cm)",
  "TEMP", "Temperature", "TEMP", "Temperature (C)",
  "MAP", "Mean Arterial Pressure", "MAP", "Mean Arterial Pressure (mmHg)",
  "BMI", "Body Mass Index", "BMI", "Body Mass Index(kg/m^2)",
  "BSA", "Body Surface Area", "BSA", "Body Surface Area(m^2)"
)
derive_vars_merged_lookup(
  dataset = admiral_vs,
  dataset_add = param_lookup,
  by_vars = vars(VSTESTCD),
  new_vars = vars(PARAMCD),
  print_not_mapped = TRUE
)
}
\author{
Annie Yang
}
\keyword{adam}
\keyword{derivation}
