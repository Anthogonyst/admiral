% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_query_data.R
\name{read_query_data}
\alias{read_query_data}
\title{Reads queries from SMQ and SDG database and creates input dataset for
\code{derive_query_vars()}}
\usage{
read_query_data(
  queries,
  meddra_version = NULL,
  whodd_version = NULL,
  get_smq_fun = NULL,
  get_sdg_fun = NULL
)
}
\arguments{
\item{queries}{List of queries

A list of \code{query()} objects is expected.}

\item{meddra_version}{MedDRA version

The MedDRA version used for coding the terms in the AE dataset should be
specified. If any of the queries is a SMQ, the parameter needs to be
specified.

\emph{Permitted Values}: A character string}

\item{whodd_version}{WHO Drug Dictionary version

The version of the WHO Drug Dictionary used for coding the terms in the CM
dataset should be specified. If any of the queries is a SDG, the parameter
needs to be specified.

\emph{Permitted Values}: A character string}

\item{get_smq_fun}{Function which returns the terms of a SMQ

For each query specified for the \code{queries} parameter which refers to a SMQ
the specified function is called to retrieve the terms defining the query.

The function must return a dataset with all the terms defining the SMQ. The
output dataset must contain the following variables.
\itemize{
\item \code{TERM_LEVEL}
\item \code{TERM_NAME} if the variable \code{TERM_LEVEL} is referring to is character
\item \code{TERM_ID} if the variable \code{TERM_LEVEL} is referring to is numeric
\item \code{QUERY_NAME}
}

The function must provide the following parameters
\itemize{
\item \code{query}: A SMQ query. A \code{query()} object where the \code{definition} element
is a \code{smq_select()} object.
\item \code{version}: The MedDRA version. The value specified for the
\code{meddra_version} in the \code{read_query_data()} is passed to this parameter.
\item \code{keep_id}: If set to \code{TRUE}, the output dataset must contain the
\code{QUERY_ID} variable
\item \code{temp_env}: A temporary environment is passed to this parameter. It can
be used to store data which is used for all SMQs in the
\code{read_query_call()}. For example if the SMQs need to be read from a
database all SMQs can be read and stored in the environment when the first
SMQ is handled. For the other SMQs the terms can be retrieved from the
environment instead of accessing the database again.
}}

\item{get_sdg_fun}{Function which returns the terms of a SDG

For each query specified for the \code{queries} parameter which refers to a SDG
the specified function is called to retrieve the terms defining the query.

The function must return a dataset with all the terms defining the SDG. The
output dataset must contain the following variables.
\itemize{
\item \code{TERM_LEVEL}
\item \code{TERM_NAME} if the variable \code{TERM_LEVEL} is referring to is character
\item \code{TERM_ID} if the variable \code{TERM_LEVEL} is referring to is numeric
\item \code{QUERY_NAME}
}

The function must provide the following parameters
\itemize{
\item \code{query}: A SDG query. A \code{query()} object where the \code{definition} element
is a \code{sdg_select()} object.
\item \code{version}: The WHO drug dictionary version. The value specified for the
\code{whodd_version} in the \code{read_query_data()} is passed to this parameter.
\item \code{keep_id}: If set to \code{TRUE}, the output dataset must contain the
\code{QUERY_ID} variable
\item \code{temp_env}: A temporary environment is passed to this parameter. It can
be used to store data which is used for all SDGs in the
\code{read_query_call()}. For example if the SDGs need to be read from a
database all SDGs can be read and stored in the environment when the first
SDG is handled. For the other SDGs the terms can be retrieved from the
environment instead of accessing the database again.
}}
}
\value{
A dataset to be used as input for \code{derive_query_vars()}
}
\description{
Reads queries from SMQ and SDG database and creates input dataset for
\code{derive_query_vars()}.
}
\details{
For each query the terms belonging to the query are determined with
respect to the \code{definition} element.
\itemize{
\item If it is a \code{smq_select()} object, the terms are read from the SMQ
database.
\item If it is a \code{sdg_select()} object, the terms are read from the SDG
database.
\item If it is a data frame, the terms stored in the data frame are used.
}

The following variables are created:
\itemize{
\item \code{VAR_PREFIX}: Prefix of the variables to be created by
\code{derive_query_vars()} as specified by the \code{prefix} element.
\item \code{QUERY_NAME}: Name of the query as specified by the \code{name} element.
\item \code{QUERY_ID}: Id of the query as specified by the \code{id} element. If the \code{id}
element is not specified for a query, the variable is set to \code{NA}. If the
\code{id} element is not specified for any query, the variable is not created.
\item \code{QUERY_SCOPE}: scope of the query as specified by the \code{scope} element. If
the \code{scope} element is not specified for a query, the variable is set to
\code{NA}. If the \code{scope} element is not specified for any query, the variable
is not created.
\item \code{QUERY_SCOPE_NUM}: scope of the query as specified by the \code{scope_num}
element. If the \code{scope_num} element is not specified for a query, the
variable is set to \code{NA}. If the \code{scope_num} element is not specified for
any query, the variable is not created.
\item \code{TERM_LEVEL}: Name of the variable used to identify the terms. For SMQs
it is set to the variable defined in the SMQ database. For SDG it is set to
\code{"CMPNCD"}. For other queries it is set to the value of the \code{TERM_LEVEL}
variable provided in the \code{definition} element.
\item \code{TERM_NAME}: Value of the term variable if it is a character variable.
\item \code{TERM_ID}: Value of the term variable if it is a numeric variable.
}
}
\examples{
library(tibble)
library(magrittr)
library(dplyr)

# creating a query dataset for a customized query
cqterms <- tribble(
  ~TERM_NAME, ~TERM_ID,
  "APPLICATION SITE ERYTHEMA", 10003041L,
  "APPLICATION SITE PRURITUS", 10003053L) \%>\%
  mutate(TERM_LEVEL = "AEDECOD")

cq <- query(prefix = "CQ01",
            name = "Application Site Issues",
            definition = cqterms)

read_query_data(queries = list(cq),
                meddra_version = "20.1")

# create a query dataset for SMQs
pregsqm <- query(
  prefix = "SMQ02",
  id = auto,
  scope = "NARROW",
  scope_num = 2,
  definition = smq_select(name = "Pregnancy and neonatal topics (SMQ)"))

pneuaegt <- query(prefix = "SMQ04",
                  definition = smq_select(id = 8050L))

\dontrun{
read_query_data(queries = list(pregsqm, pneuaegt),
                meddra_version = "20.1")
}

# create a query dataset for SDGs
sdg <- query(
  prefix = "SDG01",
  id = auto,
  definition = sdg_select(
    name = "5-aminosalicylates for ulcerative colitis"
  )
)
\dontrun{
read_query_data(queries = list(sdg),
                whodd_version = "2019_09")
}
}
\author{
Stefan Bundfuss
}
\keyword{adae}
\keyword{adcm}
